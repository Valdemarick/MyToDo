@page "/members"
@using MyToDo.Web.Services.Abstractions
@using MyToDo.Web.Shared.Pagination
@using MyToDo.Web.Components.RegisterMember
@using MyToDo.Web.Components
@using MyToDo.Web.Components.UpdateMember
@inject IMemberService MemberService
@inject NavigationManager NavigationManager
@inherits BaseComponent
@* @attribute [Authorize] *@

<h3>Пользователи</h3>

<button class="btn btn-primary" @onclick="@ShowRegisterForm">
    <i class="bi bi-plus-square-fill"></i>&nbsp; Создать
</button>

<table class="table">
    <thead>
    <tr>
        <th @onclick="@(() => SortByName())">Имя</th>
        <th>Почта</th>
        <th>Активность</th>
        <th>Действия</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var member in _members)
    {
        <tr>
            <td>@member.FirstName @member.LastName</td>
            <td>@member.Email</td>
            <td><input type="checkbox" value="@member.IsActive" checked="@(member.IsActive)"
                       @onclick="async () => await OnActActivityUpdateAsync(member.Id, !member.IsActive)"/></td>
            <td>
                <button class="btn btn-primary" @onclick="() => ShowUpdateForm(member)">
                    <i class="bi bi-pencil-square"></i> Обновить
                </button>
            </td>
        </tr>
    }
    </tbody>
</table>
<div class="row">
    <div class="col">
        <Pagination PageView="_pageView" Spread="3" SelectedPage="SelectPageAsync" />
    </div>
</div>

@if (_isShowRegisterForm)
{
    <RegisterMember OnClose="@CloseRegisterForm"></RegisterMember>
}

@if (_isShowUpdateForm)
{
    <UpdateMember OnClose="@CloseUpdateForm" Member="_updatedMember"></UpdateMember>
}

@if (IsShowErrorDialog)
{
    <ModalDialog Title="Ошибка" Text="@Error.Message" OnClose="@CloseErrorDialog" DialogType="ModalDialog.ModalDialogType.Error"></ModalDialog>
}